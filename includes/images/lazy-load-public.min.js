!function(t,e){"object"==typeof exports?module.exports=e(t):"function"==typeof define&&define.amd?define([],function(){return e(t)}):t.LazyLoad=e(t)}("undefined"!=typeof global?global:this.window||this.global,function(t){"use strict";let e=function(t,...s){let i=!1;for(let r of("boolean"==typeof t&&(i=t,t=s.shift()),s))for(let o in r)Object.prototype.hasOwnProperty.call(r,o)&&(i&&"[object Object]"===Object.prototype.toString.call(r[o])?t[o]=e(!0,t[o],r[o]):t[o]=r[o]);return t};class s{constructor(t,s){this.settings=e({},{src:"data-src",srcset:"data-srcset",sizes:"data-sizes",style:"data-style",selector:".cwvlazyload"},s||{}),this.images=t||document.querySelectorAll(this.settings.selector),this.observer=null,this.init()}init(){if(!t.IntersectionObserver){this.loadImages();return}this.createObserver(),this.observeImages()}createObserver(){let t=this;this.observer=new IntersectionObserver(e=>{e.forEach(e=>{e.intersectionRatio>0&&t.handleIntersection(e.target)})},{root:null,rootMargin:"0px",threshold:[0]})}observeImages(){let t=this;this.images.forEach(e=>{t.observer.observe(e)})}handleIntersection(t){this.observer.unobserve(t);let e=t.getAttribute(this.settings.src),s=t.getAttribute(this.settings.srcset),i=t.getAttribute(this.settings.sizes);"img"===t.tagName.toLowerCase()?(e&&(t.src=e),s&&(t.srcset=s),i&&(t.sizes=i)):t.style=t.getAttribute(this.settings.style)}loadAndDestroy(){this.settings&&(this.loadImages(),this.destroy())}loadImages(){this.settings&&this.images.forEach(t=>{this.handleIntersection(t)})}destroy(){this.settings&&(this.observer.disconnect(),this.settings=null)}}return t.LazyLoad=s,s}),document.addEventListener("DOMContentLoaded",function(){new LazyLoad(document.querySelectorAll(".cwvlazyload"))});